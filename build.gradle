plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.3"
    id("io.micronaut.aot") version "4.0.3"
}

version = "0.1"
group = "com.annika"

repositories {
    mavenCentral()
}

dependencies {
    // Annotation Processors
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")

    // Implementations
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation('com.github.javafaker:javafaker:0.14') { exclude module: 'snakeyaml' }
    implementation(group: 'org.yaml', name: 'snakeyaml', version: '1.17')
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("org.graalvm.nativeimage:svm")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("jakarta.persistence:jakarta.persistence-api:2.2.3")
    implementation("io.micronaut.redis:micronaut-redis-lettuce")

    // Runtime Dependencies
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("org.yaml:snakeyaml")
    runtimeOnly("org.postgresql:postgresql")

    // Testing Dependencies
    testImplementation("io.micronaut:micronaut-http-client")

}


application {
    mainClass.set("com.annika.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.annika.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}



